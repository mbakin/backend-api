// Code generated by MockGen. DO NOT EDIT.
// Source: repository/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "backend_todo/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRepositoryTodo is a mock of IRepositoryTodo interface.
type MockIRepositoryTodo struct {
	ctrl     *gomock.Controller
	recorder *MockIRepositoryTodoMockRecorder
}

// MockIRepositoryTodoMockRecorder is the mock recorder for MockIRepositoryTodo.
type MockIRepositoryTodoMockRecorder struct {
	mock *MockIRepositoryTodo
}

// NewMockIRepositoryTodo creates a new mock instance.
func NewMockIRepositoryTodo(ctrl *gomock.Controller) *MockIRepositoryTodo {
	mock := &MockIRepositoryTodo{ctrl: ctrl}
	mock.recorder = &MockIRepositoryTodoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRepositoryTodo) EXPECT() *MockIRepositoryTodoMockRecorder {
	return m.recorder
}

// AddTodo mocks base method.
func (m *MockIRepositoryTodo) AddTodo(todo model.Todo) *model.Todo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTodo", todo)
	ret0, _ := ret[0].(*model.Todo)
	return ret0
}

// AddTodo indicates an expected call of AddTodo.
func (mr *MockIRepositoryTodoMockRecorder) AddTodo(todo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTodo", reflect.TypeOf((*MockIRepositoryTodo)(nil).AddTodo), todo)
}

// DeleteAllTodos mocks base method.
func (m *MockIRepositoryTodo) DeleteAllTodos() map[string]*model.Todo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAllTodos")
	ret0, _ := ret[0].(map[string]*model.Todo)
	return ret0
}

// DeleteAllTodos indicates an expected call of DeleteAllTodos.
func (mr *MockIRepositoryTodoMockRecorder) DeleteAllTodos() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAllTodos", reflect.TypeOf((*MockIRepositoryTodo)(nil).DeleteAllTodos))
}

// GetTodos mocks base method.
func (m *MockIRepositoryTodo) GetTodos() map[string]*model.Todo {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTodos")
	ret0, _ := ret[0].(map[string]*model.Todo)
	return ret0
}

// GetTodos indicates an expected call of GetTodos.
func (mr *MockIRepositoryTodoMockRecorder) GetTodos() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTodos", reflect.TypeOf((*MockIRepositoryTodo)(nil).GetTodos))
}
